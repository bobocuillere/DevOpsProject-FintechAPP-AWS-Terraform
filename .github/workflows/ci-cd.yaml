name: CI/CD for Fintech APP

on:
  push:
    branches:
      - main

jobs:
  # ---- Preparation Stage ----
  preparation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

  # ---- Build Stage ----
  build:
    needs: preparation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build Docker Image
        run: docker build -t fintech-app-repo:${{ github.sha }} ./src
      - name: Save Docker Image
        run: |
          docker save fintech-app-repo:${{ github.sha }} > fintech-app.tar
      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: fintech-app.tar

  # ---- Publish Stage ----
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
      - uses: actions/download-artifact@v2
        with:
          name: docker-image
          path: .
      - name: Load Docker Image
        run: docker load < fintech-app.tar
      - uses: aws-actions/amazon-ecr-login@v2
      
      - name: Push Docker Image to Amazon ECR
        run: |
          docker tag fintech-app-repo:${{ github.sha }} ${{ secrets.ECR_REGISTRY }}:${{ github.sha }}
          docker push ${{ secrets.ECR_REGISTRY }}:${{ github.sha }}

  # ---- Deployment Preparation Stage ----
  deployment-preparation:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init and Apply
        run: |
          cd ./terraform
          terraform init
          terraform apply -auto-approve
      - name: Retrieve and Set up Kubernetes Config
        run: |
          cd ./terraform
          eval "$(terraform output -raw configure_kubectl)"

  # ---- Deployment Stage ----
  deployment:
    needs: deployment-preparation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Update Kubernetes Deployment Image Tag
        run: |
          sed -i "s|image:.*|image: ${{ secrets.ECR_REGISTRY }}:${{ github.sha }}|" ./k8s/deployment.yaml
          kubectl apply -f ./k8s/deployment.yaml
      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f ./k8s/
          sleep 90
      - name: Check Pods Status
        run: kubectl get pods
      - name: Get Ingress Address
        run: kubectl get ingress

  # ---- Monitoring Setup Stage ----
  monitoring-setup:
    needs: deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Update Inventory with Latest IP Addresses
        run: python3 ./scripts/update_inventory.py
      - name: Generate Grafana API Key and Update AWS Secret
        run: python3 ./scripts/generate_grafana_api_key.py
      - name: Add Prometheus Data Source to Grafana
        run: python3 ./scripts/add_grafana_datasource.py
      - name: Add Dashboard to Grafana
        run: python3 ./scripts/add_grafana_dashboard.py
